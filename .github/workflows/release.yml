name: Release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release

jobs:
  macos-universal-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Upgrade CMake
        run: |
          brew update
          brew install cmake
          cmake --version

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -G "Xcode"

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: setekh-macos
          path: |
            ./build/Setekh_artefacts/Release/LV2
            ./build/Setekh_artefacts/Release/AU
            ./build/Setekh_artefacts/Release/VST3
            ./build/Setekh_artefacts/Release/readme.txt
            !./build/Setekh_artefacts/Release/VST3/*.exp
            !./build/Setekh_artefacts/Release/VST3/*.lib

  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Upgrade CMake
        run: |
          choco install cmake --version=4.0.2 --force --yes
          cmake --version

      - name: Configure
        run: cmake -G "Visual Studio 17 2022" -DBUILD_STANDALONE=OFF -DCMAKE_BUILD_TYPE=$env:BUILD_TYPE -S . -B ./build

      - name: Build
        run: cmake --build ./build --config $env:BUILD_TYPE

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: setekh-windows
          path: |
            ./build/Setekh_artefacts/Release/LV2
            ./build/Setekh_artefacts/Release/VST3
            ./build/Setekh_artefacts/Release/readme.txt
            !./build/Setekh_artefacts/Release/VST3/*.exp
            !./build/Setekh_artefacts/Release/VST3/*.lib
            !./build/Setekh_artefacts/Release/LV2/*.exp
            !./build/Setekh_artefacts/Release/LV2/*.lib

  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install libx11-dev libfreetype-dev libfontconfig1-dev libasound2-dev libxrandr-dev libxinerama-dev libxcursor-dev

      - name: Upgrade CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/Kitware/CMake/releases/download/v4.0.2/cmake-4.0.2-linux-x86_64.tar.gz
          tar -xzf cmake-4.0.2-linux-x86_64.tar.gz
          sudo cp -r cmake-4.0.2-linux-x86_64/* /usr/local/
          cmake --version

      - name: Configure
        run: cmake -G "Unix Makefiles" -DBUILD_STANDALONE=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -S . -B ./build

      - name: Build
        run: cmake --build ./build --config $BUILD_TYPE
          
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: setekh-linux
          path: |
            ./build/Setekh_artefacts/Release/LV2
            ./build/Setekh_artefacts/Release/VST3
            ./build/Setekh_artefacts/Release/readme.txt
            !./build/Setekh_artefacts/Release/VST3/*.exp
            !./build/Setekh_artefacts/Release/VST3/*.lib

  package-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [windows-build, macos-universal-build, linux-build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ windows, macos, linux ]
    steps:
      - name: Download ${{ matrix.os }} artifact
        uses: actions/download-artifact@v4
        with:
          name: setekh-${{ matrix.os }}
          path: artifacts/setekh-${{ matrix.os }}

      - name: Zip ${{ matrix.os }} artifact
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          cd artifacts
          zip -r setekh-${{ matrix.os }}-${TAG_NAME}.zip setekh-${{ matrix.os }}

      - name: Upload zipped artifact
        uses: actions/upload-artifact@v4
        with:
          name: setekh-${{ matrix.os }}-zipped
          path: artifacts/setekh-${{ matrix.os }}-*.zip

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: package-release
    steps:
      - name: Download zipped artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}